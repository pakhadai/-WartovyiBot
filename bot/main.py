import asyncio
import logging
from telegram import Update
from bot.core.application import create_application
from bot.core.dispatcher import register_handlers
from bot.infrastructure.database import setup_database
from bot.web_backend.main import run_server
from bot.config import ADMIN_ID


async def main():
    """–ì–æ–ª–æ–≤–Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–ø—É—Å–∫—É –≤—Å—å–æ–≥–æ."""
    logging.basicConfig(
        format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
        level=logging.INFO
    )

    setup_database()

    app = create_application()
    register_handlers(app)

    logging.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Ç–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞...")
    logging.info(f"üìã –ê–¥–º—ñ–Ω ID: {ADMIN_ID}")

    # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –±—ñ–ª—å—à –∫–µ—Ä–æ–≤–∞–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ –¥–æ –∂–∏—Ç—Ç—î–≤–æ–≥–æ —Ü–∏–∫–ª—É.
    # –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä `async with app` –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∫–µ—Ä—É—î
    # app.initialize() –Ω–∞ –ø–æ—á–∞—Ç–∫—É —Ç–∞ app.shutdown() –≤ –∫—ñ–Ω—Ü—ñ.
    try:
        async with app:
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–æ–ª—ñ–Ω–≥ —É —Ñ–æ–Ω—ñ
            await app.start()
            await app.updater.start_polling(allowed_updates=Update.ALL_TYPES)

            # –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
            # –í—ñ–Ω –±—É–¥–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏, –¥–æ–∫–∏ –º–∏ –Ω–µ –∑—É–ø–∏–Ω–∏–º–æ –ø—Ä–æ–≥—Ä–∞–º—É
            await run_server()

            # –ö–æ—Ä–µ–∫—Ç–Ω–æ –∑—É–ø–∏–Ω—è—î–º–æ –±–æ—Ç–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ñ run_server (–º–∞–ª–æ–π–º–æ–≤—ñ—Ä–Ω–æ)
            await app.updater.stop()
            await app.stop()
    except Exception as e:
        logging.critical(f"–ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ä–æ–±–æ—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–∏: {e}")


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        logging.info("–ü—Ä–æ–≥—Ä–∞–º—É –∑—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º.")